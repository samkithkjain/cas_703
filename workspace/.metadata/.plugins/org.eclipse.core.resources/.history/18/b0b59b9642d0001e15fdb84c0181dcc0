/*
 * 
 */
package carnival.diagram.providers;

/**
 * @generated
 */
public class CarnivalElementTypes {

		/**
 * @generated
 */
private CarnivalElementTypes() {
}
	
		/**
 * @generated
 */
private static java.util.Map<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement> elements;

	/**
 * @generated
 */
private static org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages elementTypeImages = new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages(	carnival.diagram.part.CarnivalDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());

	/**
 * @generated
 */
private static java.util.Set<org.eclipse.gmf.runtime.emf.type.core.IElementType> KNOWN_ELEMENT_TYPES;
	
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Carnival_1000 = getElementType("carnival.diagram.Carnival_1000");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Visitor_2001 = getElementType("carnival.diagram.Visitor_2001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Volunteer_2002 = getElementType("carnival.diagram.Volunteer_2002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType CarnivalDay_2003 = getElementType("carnival.diagram.CarnivalDay_2003");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Booth_3001 = getElementType("carnival.diagram.Booth_3001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Event_3002 = getElementType("carnival.diagram.Event_3002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType VisitorVisit_4001 = getElementType("carnival.diagram.VisitorVisit_4001");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType VolunteerWork_4002 = getElementType("carnival.diagram.VolunteerWork_4002");  //$NON-NLS-1$
		
		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImageDescriptor(element);
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImage(element);
}

		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.core.runtime.IAdaptable hint) {
	return getImageDescriptor(getElement(hint));
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.core.runtime.IAdaptable hint) {
	return getImage(getElement(hint));
}

		/**
 * Returns 'type' of the ecore object associated with the hint.
 * 
 * @generated
 */
public static org.eclipse.emf.ecore.ENamedElement getElement(org.eclipse.core.runtime.IAdaptable hint) {
	Object type = hint.getAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType.class);
	if (elements == null) {
		elements = new java.util.IdentityHashMap<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement>();
		
	elements.put(Carnival_1000, carnival.CarnivalPackage.eINSTANCE.getCarnival());
					
	
	elements.put(Visitor_2001, carnival.CarnivalPackage.eINSTANCE.getVisitor());
					
	
	elements.put(Volunteer_2002, carnival.CarnivalPackage.eINSTANCE.getVolunteer());
					
	
	elements.put(CarnivalDay_2003, carnival.CarnivalPackage.eINSTANCE.getCarnivalDay());
					
	
	elements.put(Booth_3001, carnival.CarnivalPackage.eINSTANCE.getBooth());
					
	
	elements.put(Event_3002, carnival.CarnivalPackage.eINSTANCE.getEvent());
							
	elements.put(VisitorVisit_4001, carnival.CarnivalPackage.eINSTANCE.getVisitor_Visit());
					
	elements.put(VolunteerWork_4002, carnival.CarnivalPackage.eINSTANCE.getVolunteer_Work());
			}
	return (org.eclipse.emf.ecore.ENamedElement) elements.get(type);
}

		/**
 * @generated
 */
private static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(String id) {
	return org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getType(id);
}

		/**
 * @generated
 */
public static boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	if (KNOWN_ELEMENT_TYPES == null) {
		KNOWN_ELEMENT_TYPES = new java.util.HashSet<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
			KNOWN_ELEMENT_TYPES.add(Carnival_1000);
		KNOWN_ELEMENT_TYPES.add(Visitor_2001);
		KNOWN_ELEMENT_TYPES.add(Volunteer_2002);
		KNOWN_ELEMENT_TYPES.add(CarnivalDay_2003);
		KNOWN_ELEMENT_TYPES.add(Booth_3001);
		KNOWN_ELEMENT_TYPES.add(Event_3002);
		KNOWN_ELEMENT_TYPES.add(VisitorVisit_4001);
		KNOWN_ELEMENT_TYPES.add(VolunteerWork_4002);
		}
	return KNOWN_ELEMENT_TYPES.contains(elementType);
}
	
		/**
 * @generated
 */
	public static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(int visualID) {
		switch (visualID) {
				case carnival.diagram.edit.parts.CarnivalEditPart.VISUAL_ID:		return Carnival_1000;
	case carnival.diagram.edit.parts.VisitorEditPart.VISUAL_ID:		return Visitor_2001;
	case carnival.diagram.edit.parts.VolunteerEditPart.VISUAL_ID:		return Volunteer_2002;
	case carnival.diagram.edit.parts.CarnivalDayEditPart.VISUAL_ID:		return CarnivalDay_2003;
	case carnival.diagram.edit.parts.BoothEditPart.VISUAL_ID:		return Booth_3001;
	case carnival.diagram.edit.parts.EventEditPart.VISUAL_ID:		return Event_3002;
	case carnival.diagram.edit.parts.VisitorVisitEditPart.VISUAL_ID:		return VisitorVisit_4001;
	case carnival.diagram.edit.parts.VolunteerWorkEditPart.VISUAL_ID:		return VolunteerWork_4002;
		}
		return null;
	}
	
		/**
 * @generated
 */
	public static final org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes TYPED_INSTANCE 
		= new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes(elementTypeImages) {
		
		/**
 * @generated
 */
		@Override

		public boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
			return carnival.diagram.providers.CarnivalElementTypes.isKnownElementType(elementType);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.gmf.runtime.emf.type.core.IElementType getElementTypeForVisualId(int visualID) {
			return carnival.diagram.providers.CarnivalElementTypes.getElementType(visualID);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.emf.ecore.ENamedElement getDefiningNamedElement(org.eclipse.core.runtime.IAdaptable elementTypeAdapter) {
			return carnival.diagram.providers.CarnivalElementTypes.getElement(elementTypeAdapter);
		}
	}; 

	}
